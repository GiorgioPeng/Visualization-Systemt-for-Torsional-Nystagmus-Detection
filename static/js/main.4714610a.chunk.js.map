{"version":3,"sources":["globalState.js","subPages/Label/CustomerDragger.js","components/VideoPlayer.js","subPages/Label/VideoControl.js","subPages/Label/DataTable.js","components/RecordAddTable.js","subPages/Label/ParametersBox.js","subPages/Label/IllnessSelect.js","subPages/Label/index.js","subPages/Detect/DetectButtons.js","subPages/Detect/VideoContainer.js","subPages/Detect/DetectTable.js","subPages/Detect/index.js","subPages/Predict/index.js","App.js","reportWebVitals.js","index.js"],"names":["GloalStateContext","createContext","initState","records","labelTableHeader","title","dataIndex","key","detectTableHeader","render","text","record","size","operation","videoFile","GlobalStateProvider","children","useState","state","setState","Provider","value","console","log","lastState","useGlobalState","useContext","Dragger","Upload","CustomerDragger","updateState","props","name","multiple","action","beforeUpload","file","type","startsWith","message","error","LIST_IGNORE","onChange","info","status","fileList","success","onDrop","e","dataTransfer","files","className","InboxOutlined","VideoPlayer","videoRef","videoSrc","videoType","playsInline","fluid","autoPlay","ref","src","autoHide","disableDefaultControls","seconds","order","rates","VideoControl","style","margin","width","minHeight","border","display","justifyContent","alignItems","url","undefined","window","createObjectURL","URL","webkitURL","getObjectURL","originFileObj","fontSize","DataTable","columns","dataSource","Option","Select","RecordAddTable","tempRecord","setTempRecord","newKey","React","useEffect","keyTranslate","resultKey","map","element","index","tempColumnValues","paramtersValue","filter","i","label","length","justifySelf","onSelect","newValue","handleChange","values","ParametersBox","initTempRecord","start","end","nystagmus","method","rotate","direction","speed","timeRecord","current","video","player","currentTime","shape","onClick","danger","temp","Object","getOwnPropertyNames","every","push","alert","IllnessSelect","textAlign","Group","defaultValue","buttonStyle","gutter","illnesses","illness","span","Button","height","marginTop","placement","onConfirm","okText","cancelText","icon","UploadOutlined","createRef","DetectButtons","setButtonState","handleClick","Panel","Collapse","Meta","Card","VideoContainer","loading","1","2","3","buttonState","hoverable","cursor","collapsible","header","DetectTable","Header","Layout","Sider","Content","App","collapsed","setCollapsed","trigger","theme","mode","defaultSelectedKeys","Item","UserOutlined","to","VideoCameraOutlined","createElement","MenuUnfoldOutlined","MenuFoldOutlined","padding","path","Label","Detect","Predict","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4714610a.chunk.js","sourcesContent":["import React, { useState, createContext, useContext, } from 'react';\nimport { Button, Space } from 'antd'\n// 提供全局状态\nconst GloalStateContext = createContext(null)\n\nconst initState = {\n    records: [],\n    labelTableHeader: [\n        {\n            title: '开始时间',\n            dataIndex: 'start',\n            key: 'start',\n        },\n        {\n            title: '结束时间',\n            dataIndex: 'end',\n            key: 'end',\n        },\n        {\n            title: '检查方式',\n            dataIndex: 'method',\n            key: 'method',\n        },\n        {\n            title: '眼震',\n            dataIndex: 'nystagmus',\n            key: 'nystagmus',\n        },\n        {\n            title: '旋转',\n            dataIndex: 'rotate',\n            key: 'rotate',\n        },\n        {\n            title: '方向',\n            dataIndex: 'direction',\n            key: 'direction',\n        },\n        {\n            title: '速度',\n            dataIndex: 'speed',\n            key: 'speed',\n        }\n    ],\n    detectTableHeader: [\n        {\n            title: '起始时间',\n            dataIndex: 'start',\n            key: 'start',\n        },\n        {\n            title: '终止时间',\n            dataIndex: 'end',\n            key: 'end',\n        },\n        {\n            title: '操作',\n            dataIndex: 'operation',\n            key: 'operation',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button> {record.operation}</Button>\n                </Space>\n            ),\n        }\n    ],\n    videoFile: null,\n    // 这里放置初始状态\n};\nexport function GlobalStateProvider({ children }) {\n    const [state, setState] = useState(initState);\n\n    const updateState = (key, value) => {\n        console.log(key, value)\n        setState((lastState) => {\n            return {\n                ...lastState,\n                [key]: value\n            }\n        })\n    }\n    const resetState = () => {\n        setState(initState)\n    }\n    return (\n        <GloalStateContext.Provider value={[state, updateState, resetState]}>\n            {children}\n        </GloalStateContext.Provider>\n    )\n}\nexport function useGlobalState() {\n    return useContext(GloalStateContext)\n}","import React from 'react'\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { useGlobalState } from '../../globalState'\nconst { Dragger } = Upload;\n\nfunction CustomerDragger() {\n    const [, updateState,] = useGlobalState()\n    const props = {\n        name: 'file',\n        multiple: false, //是否支持多文件\n        action: '这里设定后端接受文件的地址',\n        beforeUpload: file => {\n            console.log(file.type)\n            if (!file.type.startsWith('video/')) {\n                message.error(`${file.name} is not a video file`);\n            }\n            return file.type.startsWith('video/') ? true : Upload.LIST_IGNORE;\n        }, // 上传前验证文件格式是否为视频文件\n        onChange(info) {\n            // console.log(info)\n            const { status } = info.file;\n            if (status !== 'uploading') {\n                console.log(info.file, info.fileList);\n                updateState('videoFile', info.file)\n            }\n            if (status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        }, // 上传后现实是否上传成功\n        onDrop(e) {\n            console.log('Dropped files', e.dataTransfer.files);\n        }, // 移除上传文件的回调\n    };\n\n    return (\n        <>\n            <Dragger {...props}>\n                <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                    band files\n            </p>\n            </Dragger>\n        </>\n    )\n}\n\nexport default CustomerDragger\n","import React from 'react'\nimport {\n    Player,\n    ControlBar,\n    PlayToggle, // PlayToggle 播放/暂停按钮 若需禁止加 disabled\n    ReplayControl, // 后退按钮\n    ForwardControl,  // 前进按钮\n    CurrentTimeDisplay,\n    TimeDivider,\n    PlaybackRateMenuButton,  // 倍速播放选项\n    VolumeMenuButton\n} from 'video-react';\nimport \"../../node_modules/video-react/dist/video-react.css\";\n\nfunction VideoPlayer(props) {\n    const { videoRef, videoSrc, videoType } = props\n    return (\n        <Player\n            playsInline\n            // poster=\"https://video-react.js.org/assets/poster.png\"\n            fluid={true}\n            autoPlay={true}\n            ref={videoRef}\n        >\n            <source\n                src={videoSrc}\n                type={videoType}\n            />\n\n            <ControlBar autoHide={false} disableDefaultControls={false}>\n                <ReplayControl seconds={5} order={1.1} />\n                <ReplayControl seconds={10} order={1.2} />\n                <ForwardControl seconds={5} order={1.3} />\n                <ForwardControl seconds={10} order={1.4} />\n                {/* 这几个是调节前后的，两个5秒，两个10秒 */}\n                <PlayToggle />\n                <CurrentTimeDisplay order={4.1} />\n                <TimeDivider order={4.2} />\n                <PlaybackRateMenuButton rates={[5, 2, 1.5, 1, 0.5]} order={7.1} />\n                {/* 这个用于调整播放速度 */}\n                <VolumeMenuButton />\n            </ControlBar>\n        </Player>\n    )\n}\n\nexport default VideoPlayer\n","import React from 'react'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport { useGlobalState } from '../../globalState'\n\nfunction VideoControl(props) {\n    const { videoRef } = props\n    const [state,] = useGlobalState()\n    const getObjectURL = (file) => {\n        let url = null;\n        if (window.createObjectURL !== undefined) {\n            url = window.createObjectURL(file)\n        } else if (window.URL !== undefined) {\n            url = window.URL.createObjectURL(file)\n        } else if (window.webkitURL !== undefined) {\n            url = window.webkitURL.createObjectURL(file)\n        }\n        return url;\n    }// 生成一个url供预览视频文件\n    return (\n        <div style={{ margin: '10px auto', width: '100%', minHeight: '500px', border: '1px solid', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            {\n                state.videoFile ?\n                    <VideoPlayer\n                        videoRef={videoRef}\n                        videoSrc={getObjectURL(state.videoFile.originFileObj)}\n                        videoType={state.videoFile.type}\n                    />\n                    // <Player\n                    //     playsInline\n                    //     // poster=\"https://video-react.js.org/assets/poster.png\"\n                    //     fluid={true}\n                    //     autoPlay={true}\n                    //     ref={videoRef}\n                    // >\n                    //     <source\n                    //         src={getObjectURL(state.videoFile.originFileObj)}\n                    //         type={state.videoFile.type}\n                    //     />\n\n                    //     <ControlBar autoHide={false} disableDefaultControls={false}>\n                    //         <ReplayControl seconds={5} order={1.1} />\n                    //         <ReplayControl seconds={10} order={1.2} />\n                    //         <ForwardControl seconds={5} order={1.3} />\n                    //         <ForwardControl seconds={10} order={1.4} />\n                    //         {/* 这几个是调节前后的，两个5秒，两个10秒 */}\n                    //         <PlayToggle />\n                    //         <CurrentTimeDisplay order={4.1} />\n                    //         <TimeDivider order={4.2} />\n                    //         <PlaybackRateMenuButton rates={[5, 2, 1.5, 1, 0.5]} order={7.1} />\n                    //         {/* 这个用于调整播放速度 */}\n                    //         <VolumeMenuButton />\n                    //     </ControlBar>\n                    // </Player>\n                    :\n                    <b style={{ fontSize: '40px' }}>未上传视频</b>\n            }\n        </div>\n    )\n}\n\nexport default VideoControl\n","import React from 'react'\nimport { Table } from 'antd';\nimport { useGlobalState } from '../../globalState'\n\nfunction DataTable() {\n    const [state,] = useGlobalState()\n    const columns = state.labelTableHeader\n    return (\n        <Table columns={columns}  dataSource={state.records} />\n    )\n}\n\nexport default DataTable\n\n\n","import React from 'react'\nimport { Select } from 'antd'\nimport './RecordAddTable.css'\nimport { useGlobalState } from '../globalState'\nimport paramtersValue from '../assets/data.json' // 导入给定的参数们\n\nconst { Option } = Select;\n\nfunction RecordAddTable(props) {\n    const [state,] = useGlobalState()\n    const columns = state.labelTableHeader\n    const { tempRecord, setTempRecord, newKey } = props;\n    React.useEffect(() => {\n        setTempRecord(() => {\n            return {\n                ...tempRecord,\n                'key': newKey\n            }\n        });\n    }, [newKey, state])\n\n    const keyTranslate = (key) => {\n        let resultKey = ''\n        switch (key) {\n            case '检查方式':\n                resultKey = 'method'\n                break\n            case '眼震':\n                resultKey = 'nystagmus'\n                break\n            case '旋转':\n                resultKey = 'rotate'\n                break\n            case '方向':\n                resultKey = 'direction'\n                break\n            case '速度':\n                resultKey = 'speed'\n                break\n            default:\n                resultKey = ''\n                break\n        }\n        return resultKey\n    }\n\n    const handleChange = (newValue, key) => {\n        let label = keyTranslate(key)\n        if (label === '')\n            return\n        setTempRecord(() => {\n            return {\n                ...tempRecord,\n                [label]: newValue\n            }\n        });\n    }\n    return (\n        <div className=\"container\">\n            {\n                columns.map((element) => {\n                    return <div key={element.title}>{element.title}</div>\n                })\n            }\n            {\n                columns.map((element, index) => {\n                    let tempColumnValues = paramtersValue.filter(i => i.label === element.title) // 拿出对应的列的可选参数\n                    return tempColumnValues.length === 0 ?\n                        <div key={element.title} style={{ width: 120, justifySelf: 'center' }}>{index === 0 ? tempRecord['start'] : tempRecord['end']}</div>\n                        :\n                        <Select key={element.title} style={{ width: 120, justifySelf: 'center' }} onSelect={(value) => handleChange(value, element.title)}>\n                            {tempColumnValues[0].values.map((i, index) => <Option key={index} value={i.value} >{tempRecord[keyTranslate(element.title)] === '' ? '' : i.value}</Option>)}\n                        </Select>\n                })\n            }\n        </div>\n    )\n}\n\nexport default RecordAddTable\n","import React from 'react'\nimport { Button, Divider } from 'antd'\nimport { useGlobalState } from '../../globalState'\nimport RecordAddTable from '../../components/RecordAddTable'\nimport './ParamtersBox.css'\n// 这个组件用于设置添加的新的记录的各个值\nfunction ParametersBox(props) {\n    const {videoRef} = props\n    const [state, updateState] = useGlobalState()\n    const initTempRecord = {\n        key: '',\n        start: '',\n        end: '',\n        nystagmus: '',\n        method: '',\n        rotate: '',\n        direction: '',\n        speed: '',\n    }\n\n    const resetTempRecord = ()=>{\n        setTempRecord(initTempRecord)\n    }\n    const [tempRecord, setTempRecord] = React.useState(initTempRecord);\n\n    const addRecord = () => {\n        let temp = [...state.records]\n        console.log(tempRecord)\n        Object.getOwnPropertyNames(tempRecord).every(e => tempRecord[e] !== '') ?\n            temp.push(tempRecord) : alert('有空值,添加失败')\n        updateState('records', temp)\n        resetTempRecord()\n    }\n\n    // type参数用于说明是记录开始时间还是结束时间\n    const timeRecord = (type) => {\n        setTempRecord(() => {\n            return {\n                ...tempRecord,\n                [type]: videoRef.current?.video.props.player.currentTime,\n            }\n        });\n    }\n    return (\n        <div>\n            <Divider />\n            <div className=\"ButtonGroup\">\n                <Button type=\"primary\" shape=\"round\" onClick={() => timeRecord('start')}>眼震开始</Button>\n                <Button type=\"primary\" shape=\"round\" danger onClick={() => timeRecord('end')}> 眼震结束</Button>\n                <Button type=\"dashed\" shape=\"round\" onClick={addRecord}>添加一行记录</Button>\n            </div>\n            <Divider />\n            <RecordAddTable tempRecord={tempRecord}\n                newKey={state.records.length + 1}\n                setTempRecord={setTempRecord} />\n            <Divider>⬆️ 正在添加｜所有记录 ⬇️</Divider>\n        </div>\n    )\n}\n\nexport default ParametersBox\n","import React from 'react'\nimport { Radio, Button, Row, Col, Popconfirm, message, } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport illnesses from '../../assets/illness.json'\nfunction IllnessSelect() {\n    const text = '是否已经保存选项?';\n\n    function confirm() {\n        message.info('提交成功');\n    }\n    return (\n        <div>\n            <div style={{ textAlign: 'center' }}>\n                <h1>疾病选择</h1>\n            </div>\n            <Radio.Group defaultValue=\"无\" buttonStyle=\"solid\">\n                <Row gutter={[16, 24]}>\n                    {\n                        illnesses.map(illness =>\n                            <Col span={4}><Radio.Button style={{ height: '50px', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }} value={illness.name}>{illness.name}</Radio.Button></Col>\n                        )\n                    }\n                </Row>\n            </Radio.Group>\n            <div style={{ marginTop: '10px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Popconfirm placement=\"top\" title={text} onConfirm={confirm} okText=\"是\" cancelText=\"忘记了\">\n                    <Button type=\"primary\" icon={<UploadOutlined />} size='large' danger>\n                        提交\n                    </Button>\n                </Popconfirm>\n            </div>\n        </div>\n    )\n}\n\nexport default IllnessSelect\n","import React from 'react'\nimport CustomerDragger from'./CustomerDragger'\nimport VideoControl from './VideoControl'\nimport DataTable from './DataTable'\nimport ParamtersBox from './ParametersBox'\nimport IllnessSelect from './IllnessSelect'\nfunction index() {\n    const videoRef = React.createRef() // 视频的ref\n    return (\n        <div>\n            <CustomerDragger/>\n            <VideoControl videoRef={videoRef}/>\n            <ParamtersBox videoRef={videoRef}/>\n            <DataTable/>\n            <IllnessSelect/>\n        </div>\n    )\n}\n\nexport default index\n","import React from 'react'\nimport { Button } from 'antd'\n\nfunction DetectButtons(props) {\n    const { setButtonState } = props\n    const buttons = ['去除无效帧', '对标', '显示光流']\n    const handleClick = (index) => {\n        // 这里后期还要加上后端是否成功返回的判断逻辑，这里先进行简化了\n        setButtonState((lastState) => {\n            return {\n                ...lastState,\n                [index]: true // 确保是一个幂等操作\n            }\n        })\n    }\n    return (\n        <div style={{ marginTop: '10px', display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n            {buttons.map((text, index) =>\n                <Button type=\"primary\" size='large' key={index} onClick={() => handleClick(index)}>\n                    {text}\n                </Button>)\n            }\n        </div>\n    )\n}\n\nexport default DetectButtons\n","import React from 'react'\nimport { Row, Col, Card, Collapse, Space } from 'antd'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport DetectButtons from './DetectButtons'\n\nconst { Panel } = Collapse;\nconst { Meta } = Card;\nfunction VideoContainer() {\n    const [loading, setLoading] = React.useState(false) // 后期判断后端是否把视频传过来时使用这个状态\n    const videoGroup = ['去无效帧后的视频', '对标后视频', '光流视频']\n    const [buttonState, setButtonState] = React.useState(\n        {\n            1: false,\n            2: false,\n            3: false\n        }\n    )\n    // 这里等着后端传视频url等参数才能继续，先放在这里占着位置\n    return (\n        <div>\n            <Card\n                hoverable\n                style={{ width: '100%', cursor: 'default' }}\n                loading={loading}\n            >\n                <Meta\n                    title={'原始视频'}\n                    style={{ textAlign: 'center' }}\n                />\n                <VideoPlayer />\n            </Card>\n            <DetectButtons setButtonState={setButtonState} />\n            {\n                videoGroup.map((title, index) =>\n                    <Collapse style={{ width: '100%', marginTop: '10px' }} key={index} collapsible={buttonState[index] ? '' : 'disabled'}>\n                        <Panel header={title} key={index}>\n                            <Card\n                                hoverable\n                                style={{ width: '100%', cursor: 'default' }}\n                                loading={loading}\n                            >\n                                <VideoPlayer />\n                            </Card>\n\n                        </Panel>\n                    </Collapse>\n                )\n            }\n        </div>\n    )\n}\n\nexport default VideoContainer\n","import React from 'react'\nimport { Table, Divider } from 'antd';\nimport {useGlobalState} from '../../globalState'\nfunction DetectTable() {\n    const [state,] = useGlobalState()\n    const columns = state.detectTableHeader\n    const data = [\n        {\n            key: '1',\n            start:'0:30',\n            end:'0:31',\n            operation:'跳转'\n        },\n        {\n            key: '2',\n            start:'0:40',\n            end:'0:45',\n            operation:'跳转'\n        },\n        {\n            key: '3',\n            start:'0:58',\n            end:'0:59',\n            operation:'跳转'\n        },\n        {\n            key: '4',\n            start:'1:40',\n            end:'1:45',\n            operation:'跳转'\n        },\n    ];\n    return (\n        <div style={{ marginTop: '40px'}}>\n            <Divider><h1>检测后的眼震区间</h1></Divider>\n            <Table columns={columns} dataSource={data} />\n        </div>\n    )\n}\n\nexport default DetectTable","import React from 'react'\nimport VideoContainer from './VideoContainer'\nimport DetectTable from './DetectTable'\nfunction index() {\n    return (\n        <div>\n            <VideoContainer />\n            <DetectTable />\n        </div>\n    )\n}\n\nexport default index\n","import React from 'react'\n\nfunction index() {\n    return (\n        <div>\n            这里是预测界面\n        </div>\n    )\n}\n\nexport default index\n","import React from 'react';\nimport './App.css';\nimport { Layout, Menu, BackTop } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from '@ant-design/icons'; //这里先随便用了一些图标，后面再调整\n\nimport { GlobalStateProvider } from \"./globalState\";\n\nimport { BrowserRouter, Switch, Link, Route, Redirect } from 'react-router-dom' // 导入路由组件\n\nimport Label from './subPages/Label'\nimport Detect from './subPages/Detect'\nimport Predict from './subPages/Predict'\n\nconst { Header, Sider, Content } = Layout;\n\nfunction App() {\n  const [collapsed, setCollapsed] = React.useState(false) // 这个state用于控制左侧导航栏的开关状态\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n  return (\n    <GlobalStateProvider>\n      <Layout>\n        <BrowserRouter>\n          <Sider trigger={null} className=\"site-sider\" collapsible collapsed={collapsed}>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                <Link to=\"/label\">标注</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                <Link to=\"/detect\">检测</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n                <Link to=\"/predict\">病情预测</Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\">\n              {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: toggle,\n              })}\n            </Header>\n\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 280,\n              }}\n            >\n              <Switch>\n                <Route path=\"/label\">\n                  <Label />\n                </Route>\n                <Route path=\"/detect\">\n                  <Detect />\n                </Route>\n                <Route path=\"/predict\">\n                  <Predict />\n                </Route>\n                <Redirect to=\"/label\"></Redirect>\n              </Switch>\n            </Content>\n          </Layout>\n        </BrowserRouter>\n      </Layout>\n      <BackTop />\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';  // 这里导入的antd的所有样式\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}