{"version":3,"sources":["globalState.js","components/Introduction.js","subPages/Label/CustomerDragger.js","components/VideoPlayer.js","subPages/Label/VideoControl.js","subPages/Label/DataTable.js","components/RecordAddTable.js","subPages/Label/ParametersBox.js","subPages/Label/IllnessSelect.js","subPages/Label/index.js","utils/baseURL.js","subPages/Overview/VideoContainer.js","subPages/Overview/index.js","subPages/RemoveUselessFrame/ActionButton.js","subPages/RemoveUselessFrame/index.js","subPages/Cut/ActionButton.js","subPages/Cut/index.js","subPages/LightStream/ActionButton.js","subPages/LightStream/index.js","subPages/Location/SpecialPlayer.js","subPages/Location/DetectButton.js","subPages/Location/index.js","assets/intro.png","subPages/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["GloalStateContext","createContext","initState","records","labelTableHeader","title","dataIndex","key","detectTableHeader","render","text","record","size","operation","illness","videoFile","remoteVideoSrc","remoteVideoUsefulFrameSrc","remoteVideoCenterSrc","remoteVideoStreamSrc","remoteVideoStreamRGBSrc","sections","removeuselessframeLoading","cutLoading","lightstreamLoading","GlobalStateProvider","children","useState","state","setState","Provider","value","console","log","lastState","useGlobalState","useContext","Introduction","React","visible","setVisible","onClose","placement","closable","height","style","overflow","display","justifyContent","alignItems","fontSize","fontWeight","textAlign","flexDirection","type","onClick","Dragger","Upload","CustomerDragger","updateState","props","name","multiple","action","beforeUpload","file","startsWith","message","error","LIST_IGNORE","onChange","info","status","success","onDrop","e","dataTransfer","files","className","InboxOutlined","VideoPlayer","videoRef","videoSrc","videoType","playsInline","fluid","autoPlay","ref","src","autoHide","disableDefaultControls","seconds","order","rates","VideoControl","margin","maxWidth","minHeight","maxHeight","border","url","undefined","window","createObjectURL","URL","webkitURL","getObjectURL","originFileObj","DataTable","columns","dataSource","Option","Select","RecordAddTable","tempRecord","setTempRecord","newKey","useEffect","gridTemplateColumns","columnGap","color","map","element","index","tempColumnValues","paramtersValue","filter","i","label","length","width","justifySelf","onSelect","newValue","showSearch","placeholder","values","ParametersBox","initTempRecord","开始时间","结束时间","眼震","检查方式","旋转","方向","速度","timeRecord","current","video","player","currentTime","notification","description","shape","danger","temp","Object","getOwnPropertyNames","some","push","IllnessSelect","Group","target","defaultValue","buttonStyle","gutter","illnesses","span","Button","marginTop","data","疾病","filename","split","icon","DownloadOutlined","createRef","VideoContainer","videoGroup","hoverable","cursor","headStyle","baseUrl","Overview","ActionButton","isClicked","setLoading","removeuselessframe","a","fetch","result","json","detailInfo","video_src_path","disabled","RemoveUselessFrame","newvalue","strokeColor","percent","showInfo","cut","Cut","lightStream","LightStream","specialPlayerRef","specialPlayerRefAnother","durationState","setDurationState","playerAnother","playbackRate","addEventListener","duration","pause","play","section","vertical","position","backgroundColor","borderRadius","left","startTime","endTime","setTimeout","handleClick","DetectButton","handleDetect","Location","SpecialPlayer","introductionImage","alt","Header","Layout","Sider","Content","SubMenu","Menu","App","collapsed","setCollapsed","theme","trigger","collapsible","mode","defaultSelectedKeys","Item","HomeOutlined","to","HighlightOutlined","ClearOutlined","DeleteOutlined","ScissorOutlined","VideoCameraOutlined","AppstoreOutlined","EyeOutlined","createElement","MenuUnfoldOutlined","MenuFoldOutlined","padding","path","Label","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13ad5609.chunk.js","sourcesContent":["import React, { useState, createContext, useContext, } from 'react';\nimport { Button, Space } from 'antd'\n// 提供全局状态\nconst GloalStateContext = createContext(null)\n\nconst initState = {\n    records: [],\n    labelTableHeader: [\n        {\n            title: '开始时间',\n            dataIndex: '开始时间',\n            key: '开始时间',\n        },\n        {\n            title: '结束时间',\n            dataIndex: '结束时间',\n            key: '结束时间',\n        },\n        {\n            title: '检查方式',\n            dataIndex: '检查方式',\n            key: '检查方式',\n        },\n        {\n            title: '眼震',\n            dataIndex: '眼震',\n            key: '眼震',\n        },\n        {\n            title: '旋转',\n            dataIndex: '旋转',\n            key: '旋转',\n        },\n        {\n            title: '方向',\n            dataIndex: '方向',\n            key: '方向',\n        },\n        {\n            title: '速度',\n            dataIndex: '速度',\n            key: '速度',\n        }\n    ],\n    detectTableHeader: [\n        {\n            title: '起始时间',\n            dataIndex: 'start',\n            key: 'start',\n        },\n        {\n            title: '终止时间',\n            dataIndex: 'end',\n            key: 'end',\n        },\n        {\n            title: '操作',\n            dataIndex: 'operation',\n            key: 'operation',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button> {record.operation}</Button>\n                </Space>\n            ),\n        }\n    ],\n    illness: '无',\n    videoFile: null,\n    remoteVideoSrc: '', // 这个是原始视频的访问地址\n    remoteVideoUsefulFrameSrc: '',  // 这个是有效帧视频的访问地址\n    remoteVideoCenterSrc: '',  // 这个是进行对标后视频的访问地址\n    remoteVideoStreamSrc: '',  // 这个是光流视频的访问地址\n    remoteVideoStreamRGBSrc: '', // 这个是RBG版光流视频的访问地址\n    sections: [],\n    removeuselessframeLoading: false,\n    cutLoading: false,\n    lightstreamLoading: false,\n    // 这里放置初始状态\n};\nexport function GlobalStateProvider({ children }) {\n    const [state, setState] = useState(initState);\n\n    const updateState = (key, value) => {\n        console.log(key, value)\n        setState((lastState) => {\n            return {\n                ...lastState,\n                [key]: value\n            }\n        })\n    }\n    const resetState = () => {\n        setState(initState)\n    }\n    return (\n        <GloalStateContext.Provider value={[state, updateState, resetState]}>\n            {children}\n        </GloalStateContext.Provider>\n    )\n}\nexport function useGlobalState() {\n    return useContext(GloalStateContext)\n}","import React from 'react'\nimport { Drawer, Button } from 'antd';\nfunction Introduction() {\n    const [visible, setVisible] = React.useState(true);\n    const onClose = () => {\n        setVisible(false);\n    };\n    return (\n        <Drawer\n            // title=\"基于人工智能的头晕/眩晕辅助智能诊断系统\"\n            placement=\"top\"\n            closable={false}\n            onClose={onClose}\n            visible={visible}\n            height='95vh'\n            style={{\n                overflow: 'hidden',\n            }}\n        >\n            <div style={{\n                display: 'flex',\n                height: '75vh',\n                justifyContent: 'center',\n                alignItems: 'center',\n                fontSize: '80px',\n                fontWeight: 'bolder',\n                textAlign: 'center'\n            }}>\n                基于人工智能的头晕/眩晕辅助智能诊断系统\n            </div>\n            <div style={{\n                height: '15vh',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'flex-end'\n            }}>\n                <p>2021©️北京交通大学</p>\n                <p>版本号：1.0.0</p>\n                <Button\n                    type=\"primary\"\n                    onClick={onClose}\n                    size={'large'}\n                >\n                    开始使用\n                </Button>\n            </div>\n        </Drawer>\n    );\n}\n\nexport default Introduction;\n","import React from 'react'\nimport { Upload, message } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { useGlobalState } from '../../globalState'\nconst { Dragger } = Upload;\n\nfunction CustomerDragger() {\n    const [, updateState,] = useGlobalState()\n    const props = {\n        name: 'file',\n        multiple: false, //是否支持多文件\n        action: '/file_upload',\n        beforeUpload: file => {\n            console.log(file.type)\n            if (!file.type.startsWith('video/')) {\n                message.error(`${file.name} 不是一个视频文件。`);\n            }\n            return file.type.startsWith('video/') ? true : Upload.LIST_IGNORE;\n        }, // 上传前验证文件格式是否为视频文件\n        onChange(info) {\n            // console.log(info)\n            const { status } = info.file;\n            // if (status !== 'uploading') {\n            //     console.log(info.file, info.fileList);\n            //     updateState('videoFile', info.file)\n            // }\n            if (status === 'done') {\n                message.success(`${info.file.name} 上传成功！`);\n                updateState('videoFile', info.file)\n                updateState('remoteVideoSrc', info.file.name)\n            } else if (status === 'error') {\n                message.error(`${info.file.name} 上传失败！`);\n            }\n        }, // 上传后现实是否上传成功\n        onDrop(e) {\n            console.log('Dropped files', e.dataTransfer.files);\n        }, // 移除上传文件的回调\n    };\n\n    return (\n        <>\n            <Dragger {...props}>\n                <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">点击并选择或者拖拽视频上传</p>\n                <p className=\"ant-upload-hint\">\n                    仅能够上传视频文件\n                </p>\n            </Dragger>\n        </>\n    )\n}\n\nexport default CustomerDragger\n","import React from 'react'\nimport {\n    Player,\n    ControlBar,\n    PlayToggle, // PlayToggle 播放/暂停按钮 若需禁止加 disabled\n    ReplayControl, // 后退按钮\n    ForwardControl,  // 前进按钮\n    CurrentTimeDisplay,\n    TimeDivider,\n    PlaybackRateMenuButton,  // 倍速播放选项\n    VolumeMenuButton\n} from 'video-react';\nimport \"../../node_modules/video-react/dist/video-react.css\";\n\nfunction VideoPlayer(props) {\n    const { videoRef, videoSrc, videoType } = props\n    return (\n        <Player\n            playsInline\n            // poster=\"https://video-react.js.org/assets/poster.png\"\n            fluid={true}\n            autoPlay={true}\n            ref={videoRef}\n        >\n            <source\n                src={videoSrc}\n                type={videoType}\n            />\n\n            <ControlBar autoHide={false} disableDefaultControls={false}>\n                <ReplayControl seconds={0.33} order={1.1} />\n                {/* <ReplayControl seconds={10} order={1.2} /> */}\n                <ForwardControl seconds={0.33} order={1.3} />\n                {/* <ForwardControl seconds={10} order={1.4} /> */}\n                {/* 这几个是调节前后的，两个5秒，两个10秒 */}\n                <PlayToggle />\n                <CurrentTimeDisplay order={4.1} />\n                <TimeDivider order={4.2} />\n                <PlaybackRateMenuButton rates={[5, 2, 1.5, 1, 0.5]} order={7.1} />\n                {/* 这个用于调整播放速度 */}\n                <VolumeMenuButton />\n            </ControlBar>\n        </Player>\n    )\n}\n\nexport default VideoPlayer\n","import React from 'react'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport { useGlobalState } from '../../globalState'\n\nfunction VideoControl(props) {\n    const { videoRef } = props\n    const [state,] = useGlobalState()\n    const getObjectURL = (file) => {\n        let url = null;\n        if (window.createObjectURL !== undefined) {\n            url = window.createObjectURL(file)\n        } else if (window.URL !== undefined) {\n            url = window.URL.createObjectURL(file)\n        } else if (window.webkitURL !== undefined) {\n            url = window.webkitURL.createObjectURL(file)\n        }\n        return url;\n    }// 生成一个url供预览视频文件\n    return (\n        <div style={{\n            margin: '10px auto',\n            maxWidth: '50vw',\n            // overflow: 'hidden',\n            minHeight: '500px',\n            maxHeight: '700px',\n            border: '1px solid',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }}\n        >\n            {\n                state.videoFile ?\n                    <VideoPlayer\n                        videoRef={videoRef}\n                        videoSrc={getObjectURL(state.videoFile.originFileObj)}\n                        videoType={state.videoFile.type}\n                    />\n                    :\n                    <b style={{ fontSize: '40px' }}>未上传视频</b>\n            }\n        </div>\n    )\n}\n\nexport default VideoControl\n","import React from 'react'\nimport { Table } from 'antd';\nimport { useGlobalState } from '../../globalState'\n\nfunction DataTable() {\n    const [state,] = useGlobalState()\n    const columns = state.labelTableHeader\n    return (\n        <Table columns={columns}  dataSource={state.records} />\n    )\n}\n\nexport default DataTable\n\n\n","import React from 'react'\nimport { Select } from 'antd'\n// import './RecordAddTable.css'\nimport { useGlobalState } from '../globalState'\nimport paramtersValue from '../assets/data.json' // 导入给定的参数们\n\nconst { Option } = Select;\n\nfunction RecordAddTable(props) {\n    const [state,] = useGlobalState()\n    const columns = state.labelTableHeader\n    const { tempRecord, setTempRecord, newKey } = props;\n    React.useEffect(() => {\n        setTempRecord(() => {\n            return {\n                ...tempRecord,\n                'key': newKey\n            }\n        });\n    }, [newKey, state])\n\n    // const keyTranslate = (key) => {\n    //     let resultKey = ''\n    //     switch (key) {\n    //         case '检查方式':\n    //             resultKey = 'method'\n    //             break\n    //         case '眼震':\n    //             resultKey = 'nystagmus'\n    //             break\n    //         case '旋转':\n    //             resultKey = 'rotate'\n    //             break\n    //         case '方向':\n    //             resultKey = 'direction'\n    //             break\n    //         case '速度':\n    //             resultKey = 'speed'\n    //             break\n    //         default:\n    //             resultKey = ''\n    //             break\n    //     }\n    //     return resultKey\n    // }\n\n    const handleChange = (newValue, label) => {\n        if (label === '')\n            return\n        setTempRecord(() => {\n            return {\n                ...tempRecord,\n                [label]: newValue\n            }\n        });\n    }\n    return (\n        <div style={{\n            display: 'grid',\n            gridTemplateColumns: '12% 12% 18% 10% 10% 10% 10%',\n            columnGap: '3%',\n            textAlign: 'center',\n            color: 'lightslategrey',\n            fontWeight: 'bolder'\n        }}>\n            {\n                // 这里是表头\n                columns.map((element) => {\n                    return <div key={element.title}>{element.title}</div>\n                })\n            }\n            {\n                columns.map((element, index) => {\n                    let tempColumnValues = paramtersValue.filter(i => i.label === element.title) // 拿出对应的列的可选参数\n                    // 仅有开始时间和结束时间是没有选项的\n                    return tempColumnValues.length === 0 ?\n                        <div\n                            key={element.title}\n                            style={{ width: 120, justifySelf: 'center' }}\n                        >\n                            {index === 0 ? tempRecord['开始时间'] : tempRecord['结束时间']}\n                        </div>\n                        :\n                        // 对其他的项都需要添加选项\n                        <Select\n                            key={element.title}\n                            // style={{ minWidth: '120px', justifySelf: 'center' }}\n                            onSelect={(value) => handleChange(value, element.title)}\n                            showSearch='true'\n                            placeholder='请选择'\n                        >\n                            {\n                                tempColumnValues[0].values.map((i, index) =>\n                                    <Option key={index} value={i.value} >\n                                        {tempRecord[element.title] === '' ? '' : i.value}\n                                    </Option>)\n                            }\n                        </Select>\n                })\n            }\n        </div>\n    )\n}\n\nexport default RecordAddTable\n","import React from 'react'\nimport { Button, Divider, notification, message } from 'antd'\nimport { useGlobalState } from '../../globalState'\nimport RecordAddTable from '../../components/RecordAddTable'\n\n// 这个组件用于设置添加的新的记录的各个值\nfunction ParametersBox(props) {\n    const { videoRef } = props\n    const [state, updateState] = useGlobalState()\n    const initTempRecord = {\n        key: '',\n        开始时间: '',\n        结束时间: '',\n        眼震: '',\n        检查方式: '',\n        旋转: '',\n        方向: '',\n        速度: '',\n    }\n\n    const resetTempRecord = () => {\n        setTempRecord(initTempRecord)\n    }\n    const [tempRecord, setTempRecord] = React.useState(initTempRecord);\n\n    const addRecord = () => {\n        if (state.remoteVideoSrc === '') {\n            notification['error']({\n                message: '未上传原始视屏文件',\n                description:\n                    '请前往标注界面（左侧第一个）进行原始视屏上传',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            return;\n        }\n        let temp = [...state.records]\n        console.log(tempRecord)\n        if (Object.getOwnPropertyNames(tempRecord).some(e => tempRecord[e] === ''))\n            message.error(`所添加记录有空值，请补全。`);\n        else {\n            temp.push(tempRecord)\n            updateState('records', temp)\n            resetTempRecord()\n        }\n\n    }\n\n    // type参数用于说明是记录开始时间还是结束时间\n    const timeRecord = (type) => {\n        if (state.remoteVideoSrc === '') {\n            notification['error']({\n                message: '未上传原始视屏文件',\n                description:\n                    '请前往标注界面（左侧第一个）进行原始视屏上传',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            return;\n        }\n        setTempRecord(() => {\n            return {\n                ...tempRecord,\n                [type]: videoRef.current?.video.props.player.currentTime,\n            }\n        });\n    }\n    return (\n        <div>\n            <Divider />\n            <div style={{\n                height: '50px',\n                display: 'flex',\n                justifyContent: 'space-around',\n                alignItems: 'center'\n            }}>\n                <Button type=\"primary\" shape=\"round\" onClick={() => timeRecord('开始时间')}>眼震开始</Button>\n                <Button type=\"primary\" shape=\"round\" danger onClick={() => timeRecord('结束时间')}> 眼震结束</Button>\n                <Button type=\"dashed\" shape=\"round\" onClick={addRecord}>添加一行记录</Button>\n            </div>\n            <Divider />\n            <RecordAddTable tempRecord={tempRecord}\n                newKey={state.records.length + 1}\n                setTempRecord={setTempRecord} />\n            <Divider>⬆️ 正在添加｜所有记录 ⬇️</Divider>\n        </div>\n    )\n}\n\nexport default ParametersBox\n","import React from 'react'\nimport { Radio, Button, Row, Col } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport { CSVLink } from \"react-csv\";\nimport { useGlobalState } from '../../globalState'\nimport illnesses from '../../assets/illness.json'\nfunction IllnessSelect() {\n    const [state, updateState,] = useGlobalState()\n    // const [illness, setIllness] = React.useState('无')\n    const modifyIllness = (e) => {\n        updateState('illness', e.target.value)\n    }\n    // const text = '是否已经保存选项?';\n    // function confirm() {\n    //     message.info('提交成功');\n    // }\n    return (\n        <div>\n            <div style={{ textAlign: 'center' }}>\n                <h1>疾病选择</h1>\n            </div>\n            <Radio.Group onChange={modifyIllness} defaultValue={state.illness} buttonStyle=\"solid\">\n                <Row gutter={[16, 24]}>\n                    {\n                        illnesses.map((illness, index) =>\n                            <Col span={4} key={index}>\n                                <Radio.Button\n                                    style={{\n                                        height: '50px',\n                                        width: '100%',\n                                        display: 'flex',\n                                        justifyContent: 'center',\n                                        alignItems: 'center'\n                                    }}\n                                    value={illness.name}\n                                >\n                                    {illness.name}\n                                </Radio.Button>\n                            </Col>\n                        )\n                    }\n                </Row>\n            </Radio.Group>\n            <div style={{ marginTop: '10px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                {/* <Popconfirm placement=\"top\" title={text} onConfirm={confirm} okText=\"是\" cancelText=\"忘记了\"> */}\n                <CSVLink\n                    data={state.records.map(e => { e.疾病 = state.illness; return e })}\n                    filename={state.remoteVideoSrc.split('.')[0] + '.csv'}\n                // style={{ color: 'white' }}\n                >\n                    <Button type=\"primary\" icon={<DownloadOutlined />} size='large' danger>\n                        下载\n                    </Button>\n                </CSVLink>\n                {/* </Popconfirm> */}\n            </div>\n        </div>\n    )\n}\n\nexport default IllnessSelect\n","import React from 'react'\nimport CustomerDragger from'./CustomerDragger'\nimport VideoControl from './VideoControl'\nimport DataTable from './DataTable'\nimport ParamtersBox from './ParametersBox'\nimport IllnessSelect from './IllnessSelect'\nfunction index() {\n    const videoRef = React.createRef() // 视频的ref\n    return (\n        <div>\n            <CustomerDragger/>\n            <VideoControl videoRef={videoRef}/>\n            <ParamtersBox videoRef={videoRef}/>\n            <DataTable/>\n            <IllnessSelect/>\n        </div>\n    )\n}\n\nexport default index\n","const url = 'http://10.211.55.3:8080'\nexport default url","import React from 'react'\nimport { Row, Col, Card } from 'antd'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport { useGlobalState } from '../../globalState'\nimport baseUrl from '../../utils/baseURL'\n\nfunction VideoContainer(props) {\n    const [state,] = useGlobalState()\n    // const [loading, setLoading] = React.useState(false) // 后期判断后端是否把视频传过来时使用这个状态\n    const { videoGroup, videoSrc } = props\n    React.useEffect(() => { console.log(state.remoteVideoSrc) }, [state.remoteVideoSrc])\n    // 这里等着后端传视频url等参数才能继续，先放在这里占着位置\n    return (\n        <div>\n            <Row gutter={[16, 16]}>\n                {videoGroup.map((title, index) => {\n                    return (\n                        <Col span={12}>\n                            <Card\n                                hoverable\n                                style={{ width: '100%', cursor: 'default' }}\n                                title={title}\n                                headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                            >\n                                <VideoPlayer\n                                    videoSrc={state[videoSrc[index]] !== '' ? baseUrl + '/' + state[videoSrc[index]] : ''}\n                                />\n                            </Card>\n                        </Col>\n                    )\n                })\n                }\n            </Row>\n        </div >\n    )\n}\n\nexport default VideoContainer\n","import React from 'react'\nimport VideoContainer from './VideoContainer'\nfunction Overview() {\n    const videoGroup = ['原始视频', '去无效帧后的视频', '进行对标后视频', '显示光流后视频']\n    const videoSrc = ['remoteVideoSrc', 'remoteVideoUsefulFrameSrc', 'remoteVideoCenterSrc', 'remoteVideoStreamSrc']\n    \n    return (\n        <div>\n            <VideoContainer videoGroup={videoGroup} videoSrc={videoSrc} />\n        </div>\n    )\n}\n\nexport default Overview\n","import React from 'react'\nimport { Button, notification } from 'antd'\nimport { useGlobalState } from '../../globalState'\n\nfunction ActionButton(props) {\n    const { isClicked, setLoading } = props\n    const [state, updateState,] = useGlobalState()\n    const removeuselessframe = async () => {\n        if (state.remoteVideoSrc === '') {\n            notification['error']({\n                message: '未上传原始视屏文件',\n                description:\n                    '请前往标注界面（左侧第一个）进行原始视屏上传',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            return;\n        }\n\n        setLoading(true)\n        // console.log('start cut')\n        try {\n            const result = await fetch('/SegVideo/' + state.remoteVideoSrc)\n            const detailInfo = await result.json()\n            console.log(detailInfo.video_src_path)\n            updateState('remoteVideoUsefulFrameSrc', detailInfo.video_src_path)\n        } catch (error) {\n            notification['error']({\n                message: '出错了',\n                description:\n                    '请联系系统管理员',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            console.log(error.message)\n        }\n        setLoading(false)\n    }\n    return (\n        <div>\n            <Button\n                type=\"primary\"\n                shape='round'\n                size='large'\n                onClick={removeuselessframe}\n                disabled={state.remoteVideoUsefulFrameSrc || isClicked}\n            >\n                去除无效帧\n            </Button>\n        </div>\n    )\n}\n\nexport default ActionButton\n","import React from 'react'\nimport baseUrl from '../../utils/baseURL'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport { Row, Col, Card, Progress } from 'antd'\nimport ActionButton from './ActionButton'\nimport { useGlobalState } from '../../globalState'\n\nfunction RemoveUselessFrame() {\n    const [state, updateState,] = useGlobalState()\n    const videoTitle = '去除无效帧后的视频'\n    // const [isClicked, setIsClicked] = React.useState(false);\n    // const [loading, setLoading] = React.useState(false);\n    const setLoading = (newvalue) => {\n        updateState('removeuselessframeLoading', newvalue)\n    }\n    return (\n        <div>\n            <Row gutter={[16, 16]}>\n                <Col span={12}>\n                    <Card\n                        hoverable\n                        style={{ width: '100%', cursor: 'default', textAlign: 'center' }}\n                        title={'原始视频'}\n                        headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                    >\n                        <VideoPlayer\n                            videoSrc={state.remoteVideoSrc !== '' ? baseUrl + '/' + state.remoteVideoSrc : ''}\n                        />\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    {\n                        state.remoteVideoUsefulFrameSrc === '' ?\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    height: '100%',\n                                    width: '100%',\n                                }}>\n                                <ActionButton isClicked={state.removeuselessframeLoading} setLoading={setLoading} />\n                                <div style={{ display: state.removeuselessframeLoading ? 'block' : 'none', textAlign: 'center', color: 'red' }}>\n                                    <p>程序运行中，请耐心等待。</p>\n                                    <Progress\n                                        type=\"line\"\n                                        strokeColor={{\n                                            '0%': '#108ee9',\n                                            '100%': '#87d068',\n                                        }}\n                                        percent={100}\n                                        showInfo={false}\n                                        status=\"active\"\n                                    />\n                                </div>\n\n                            </div>\n                            :\n                            <Card\n                                hoverable\n                                style={{ width: '100%', cursor: 'default', textAlign: 'center' }}\n                                title={videoTitle}\n                                headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                            >\n                                <VideoPlayer\n                                    videoSrc={baseUrl + '/' + state.remoteVideoUsefulFrameSrc}\n                                />\n                            </Card>\n                    }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default RemoveUselessFrame\n","import React from 'react'\nimport { Button, notification } from 'antd'\nimport { useGlobalState } from '../../globalState'\n\nfunction ActionButton(props) {\n    const { isClicked, setLoading } = props\n    const [state, updateState,] = useGlobalState()\n    const cut = async () => {\n        if (state.remoteVideoUsefulFrameSrc === '') {\n            notification['error']({\n                message: '未按步骤进行本系统！',\n                description:\n                    '请先进行「去除无效帧步骤」！',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            return;\n        }\n\n        setLoading(true)\n        // setIsClicked(true)\n        console.log('start cut')\n        const result = await fetch('/dingbiao/' + state.remoteVideoSrc)\n        try {\n            const detailInfo = await result.json()\n            console.log(detailInfo.video_src_path)\n            updateState('remoteVideoCenterSrc', detailInfo.video_src_path)\n        } catch (error) {\n            notification['error']({\n                message: '出错了',\n                description:\n                    '请联系系统管理员。',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            console.log(error.message)\n        }\n        setLoading(false)\n\n    }\n    return (\n        <div>\n            <Button\n                type=\"primary\"\n                shape='round'\n                size='large'\n                onClick={cut}\n                disabled={state.remoteVideoCenterSrc || isClicked}\n            >\n                进行剪裁对标\n            </Button>\n        </div>\n    )\n}\n\nexport default ActionButton\n","import React from 'react'\nimport baseUrl from '../../utils/baseURL'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport { Row, Col, Card, Progress } from 'antd'\nimport ActionButton from './ActionButton'\nimport { useGlobalState } from '../../globalState'\n\nfunction Cut() {\n    const [state, updateState,] = useGlobalState()\n    const videoTitle = '剪裁对标后的视频'\n    // const [isClicked, setIsClicked] = React.useState(false);\n    // const [loading, setLoading] = React.useState(false);\n\n    const setLoading = (newvalue) => {\n        updateState('cutLoading', newvalue)\n    }\n    return (\n        <div>\n            <Row gutter={[16, 16]}>\n                <Col span={12}>\n                    <Card\n                        hoverable\n                        style={{ width: '100%', cursor: 'default', textAlign: 'center' }}\n                        title={'原始视频'}\n                        headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                    >\n                        <VideoPlayer\n                            videoSrc={state.remoteVideoSrc !== '' ? baseUrl + '/' + state.remoteVideoSrc : ''}\n                        />\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    {\n                        state.remoteVideoCenterSrc === '' ?\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    height: '100%',\n                                    width: '100%',\n                                }}>\n                                <ActionButton  isClicked={state.cutLoading} setLoading={setLoading} />\n                                <div style={{ display: state.cutLoading ? 'block' : 'none', textAlign: 'center', color: 'red' }}>\n                                    <p>程序运行中，请耐心等待。</p>\n                                    <Progress\n                                        type=\"line\"\n                                        strokeColor={{\n                                            '0%': '#108ee9',\n                                            '100%': '#87d068',\n                                        }}\n                                        percent={100}\n                                        showInfo={false}\n                                        status=\"active\"\n                                    />\n                                </div>\n\n                            </div>\n                            :\n                            <Card\n                                hoverable\n                                style={{ width: '100%', cursor: 'default', textAlign: 'center' }}\n                                title={videoTitle}\n                                headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                            >\n                                <VideoPlayer\n                                    videoSrc={baseUrl + '/' + state.remoteVideoCenterSrc}\n                                />\n                            </Card>\n\n                    }\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default Cut\n","import React from 'react'\nimport { Button, notification } from 'antd'\nimport { useGlobalState } from '../../globalState'\n\nfunction ActionButton(props) {\n    const { isClicked, setLoading } = props\n    const [state, updateState,] = useGlobalState()\n    const lightStream = async () => {\n        if (state.remoteVideoCenterSrc === '') {\n            notification['error']({\n                message: '未按步骤进行本系统！',\n                description:\n                    '请先完成视频「对标剪裁」步骤！',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            return;\n        }\n        setLoading(true)\n        // setIsClicked(true)\n        console.log('start light stream')\n        // const result = await fetch('/lightStream/' + '11-15封岩过伸向上坐起向下.mp4')\n\n        try {\n            const result = await fetch('/lightStream/' + state.remoteVideoSrc)\n            const detailInfo = await result.json()\n            console.log(detailInfo.video_src_path)\n            updateState('remoteVideoStreamSrc', detailInfo.video_src_path)\n        } catch (error) {\n            notification['error']({\n                message: '出错了',\n                description:\n                    '请按联系系统管理员！',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            console.log(error.message)\n        }\n        setLoading(false)\n        try {\n            const result = await fetch('/lightStreamRGB/' + state.remoteVideoSrc)\n            const detailInfo = await result.json()\n            console.log(detailInfo.video_src_path)\n            updateState('remoteVideoStreamRGBSrc', detailInfo.video_src_path)\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    return (\n        <div>\n            <Button\n                type=\"primary\"\n                shape='round'\n                size='large'\n                onClick={lightStream}\n                disabled={state.remoteVideoStreamSrc || isClicked}\n            >\n                显示光流视频\n            </Button>\n        </div>\n    )\n}\n\nexport default ActionButton\n","import React from 'react'\nimport baseUrl from '../../utils/baseURL'\nimport VideoPlayer from '../../components/VideoPlayer'\nimport { Row, Col, Card, Progress } from 'antd'\nimport ActionButton from './ActionButton'\nimport { useGlobalState } from '../../globalState'\n\nfunction LightStream() {\n    const [state, updateState,] = useGlobalState()\n    const videoTitle = '光流视频'\n    // const [isClicked, setIsClicked] = React.useState(false);\n    // const [loading, setLoading] = React.useState(false);\n    const setLoading = (newvalue) => {\n        updateState('lightstreamLoading', newvalue)\n    }\n    return (\n        <div>\n            <Row gutter={[16, 16]}>\n                <Col span={12}>\n                    <Card\n                        hoverable\n                        style={{ width: '100%', cursor: 'default', textAlign: 'center' }}\n                        title={'原始视频'}\n                        headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                    >\n                        <VideoPlayer\n                            videoSrc={state.remoteVideoSrc !== '' ? baseUrl + '/' + state.remoteVideoSrc : ''}\n                        />\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    {\n                        state.remoteVideoStreamSrc === '' ?\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    height: '100%',\n                                    width: '100%',\n                                }}>\n                                <ActionButton isClicked={state.lightstreamLoading} setLoading={setLoading} />\n                                <div style={{ display: state.lightstreamLoading ? 'block' : 'none', textAlign: 'center', color: 'red' }}>\n                                    <p>程序运行中，请耐心等待。</p>\n                                    <Progress\n                                        type=\"line\"\n                                        strokeColor={{\n                                            '0%': '#108ee9',\n                                            '100%': '#87d068',\n                                        }}\n                                        percent={100}\n                                        showInfo={false}\n                                        status=\"active\"\n                                    />\n                                </div>\n\n                            </div>\n                            :\n                            <Card\n                                hoverable\n                                style={{ width: '100%', cursor: 'default', textAlign: 'center' }}\n                                title={videoTitle}\n                                headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                            >\n                                <VideoPlayer\n                                    videoSrc={baseUrl + '/' + state.remoteVideoStreamSrc}\n                                />\n                            </Card>\n                    }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default LightStream\n","import React from 'react'\nimport { Tooltip, Row, Col, Card } from 'antd'\nimport {\n    Player,\n    ControlBar,\n    PlayToggle, // PlayToggle 播放/暂停按钮 若需禁止加 disabled\n    VolumeMenuButton\n} from 'video-react';\nimport \"../../../node_modules/video-react/dist/video-react.css\";\nimport './progressPointer.css'\nimport { useGlobalState } from '../../globalState'\n\nfunction VideoPlayer(props) {\n    const { remoteVideoSrc } = props;\n    // const { videoRef, videoSrc, videoType } = props\n    const specialPlayerRef = React.createRef(null)\n    const specialPlayerRefAnother = React.createRef(null)\n    // const pointerRef = React.createRef(null)\n    const [durationState, setDurationState] = React.useState(0)\n    const [state,] = useGlobalState()\n    // const section = [{ start: 1.9, end: 10 }, { start: 23.1, end: 30.5 }]\n\n    const handleClick = (startTime, endTime) => {\n        console.log(endTime)\n        // const pointer = pointerRef.current\n        // 动画时间设置为0，避免跳转的时候显得非常突兀\n        // pointer.style.transitionDuration = '0s'\n        const player = specialPlayerRef.current.video.video\n        const playerAnother = specialPlayerRefAnother.current.video.video\n        player.currentTime = startTime\n        playerAnother.currentTime = startTime\n        player.play()\n        playerAnother.play()\n        // while(player.currentTime<endTime);\n        // player.pause()\n        // playerAnother.pause()\n        setTimeout(() => {\n            // pointer.style.transitionDuration = '500ms'\n            // while (player.currentTime < endTime) {\n            // }\n            player.pause()\n            playerAnother.pause()\n        }, (endTime - startTime) * 2000)\n    }\n\n    React.useEffect(() => {\n        // 这里需要等待后端返回眼震区间，然后生成多个button实现点击跳转\n        // console.log(specialPlayerRef.current)\n        if (specialPlayerRef.current !== null) {\n\n            const player = specialPlayerRef.current.video.video\n            const playerAnother = specialPlayerRefAnother.current.video.video\n            // const pointer = pointerRef.current\n\n            // 压低播放速度\n            player.playbackRate = 0.5\n            playerAnother.playbackRate = 0.5\n\n            player.addEventListener('timeupdate', () => {\n\n                if (durationState === 0) {\n                    setDurationState(player.duration)\n                }\n\n                // let percentage = Math.floor((100 / player.duration) *\n                //     player.currentTime);\n\n                // pointer.style.left = `${percentage - 0.5}%`\n            }, false)\n\n            // 确保两个视频能够同步播放\n            player.addEventListener('pause', () => {\n                // const pointer = pointerRef.current\n                // // 动画时间设置为0，避免跳转的时候显得非常突兀\n                // pointer.style.transitionDuration = '0s'\n                playerAnother.pause()\n            }, false)\n\n            player.addEventListener('play', () => {\n                // const pointer = pointerRef.current\n                // pointer.style.transitionDuration = '500ms'\n                playerAnother.play()\n            }, false)\n\n            playerAnother.addEventListener('pause', () => {\n                // const pointer = pointerRef.current\n                // // 动画时间设置为0，避免跳转的时候显得非常突兀\n                // pointer.style.transitionDuration = '0s'\n                player.pause()\n            }, false)\n\n            playerAnother.addEventListener('play', () => {\n                // const pointer = pointerRef.current\n                // pointer.style.transitionDuration = '500ms'\n                player.play()\n            }, false)\n\n        }\n    }, [state.section])\n\n    return (\n        <>\n            <Row gutter={[16, 16]}>\n                <Col span={12}>\n                    <Card\n                        hoverable\n                        style={{ width: '100%', cursor: 'default' }}\n                        title={'对标视频'}\n                        headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                    >\n                        <Player\n                            className={'specialPlayer'}\n                            autoPlay\n                            fluid={true}\n                            playsInline={true}\n                            ref={specialPlayerRef}\n                        >\n                            <source\n                                src={remoteVideoSrc[0]}\n                                // type={videoType}\n                                type=\"video/mp4\"\n                            />\n                            <ControlBar autoHide={false} disableDefaultControls={false}>\n                                <PlayToggle />\n                                {/* <ReplayControl seconds={0.33} />\n                                <ForwardControl seconds={0.33} /> */}\n                                {/* <PlaybackRateMenuButton style={{ fontSize: '20px' }} rates={[5, 2, 1.5, 1, 0.5]} /> */}\n                                <VolumeMenuButton vertical />\n                            </ControlBar>\n                        </Player>\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card\n                        hoverable\n                        style={{ width: '100%', cursor: 'default' }}\n                        title={'光流视频'}\n                        headStyle={{ textAlign: 'center', color: 'skyblue', fontSize: '36px', fontWeight: 'bold' }}\n                    >\n                        <Player\n                            className={'specialPlayer'}\n                            autoPlay\n                            fluid={true}\n                            playsInline={true}\n                            ref={specialPlayerRefAnother}\n                        >\n                            <source\n                                src={remoteVideoSrc[1]}\n                                // type={videoType}\n                                type=\"video/mp4\"\n                            />\n                            <ControlBar autoHide={false} disableDefaultControls={false}>\n                                <PlayToggle />\n                                {/* <ReplayControl seconds={0.33} />\n                                <ForwardControl seconds={0.33} /> */}\n                                {/* <PlaybackRateMenuButton style={{ fontSize: '20px' }} rates={[5, 2, 1.5, 1, 0.5]} /> */}\n                                <VolumeMenuButton vertical />\n                            </ControlBar>\n                        </Player>\n                    </Card>\n                </Col>\n            </Row>\n            {/* 暂时考虑用蓝色底色，红色覆盖的方式进行实现，可能需要通过鼠标定位的方式进行视频播放时间的控制 */}\n            <div\n                style={{\n                    width: '95%',\n                    position: 'relative',\n                    height: '10px',\n                    backgroundColor: 'skyblue',\n                    margin: '10px auto',\n                    borderRadius: '5px',\n                    filter: 'drop-shadow(0 0 2px #999)'\n                }}\n            >\n                {\n                    state.sections.map((element) => {\n                        if (durationState !== 0) {\n                            // console.log(element)\n                            if (element[1] - element[0] < 0.5) {\n                                return <></>\n                            }\n                            let width = (element[1] - element[0]) / durationState * 100\n                            let left = element[0] / durationState * 100\n                            // console.log(width,left)\n                            return (\n                                <Tooltip placement=\"bottom\" title={`眼震开始：「${element[0]}」秒, 眼震结束：「${element[1]}」秒`}>\n                                    <div\n                                        style={{\n                                            backgroundColor: 'red',\n                                            width: width + '%',\n                                            height: '100%',\n                                            position: 'absolute',\n                                            left: left + '%',\n                                            cursor: 'pointer'\n                                        }}\n                                        onClick={() => handleClick(element[0], element[1])}\n                                    />\n                                </Tooltip>\n                            )\n                        }\n                        else {\n                            return <></>\n                        }\n                    })\n                }\n                {/* <div\n                    className=\"progressPointer\"\n                    style={{\n                        borderTop: '0',\n                        borderLeft: '8px solid transparent',\n                        borderRight: '8px solid transparent',\n                        borderBottom: '10px solid black',\n                        position: 'absolute',\n                        left: '-1%',\n                        // 最大的left是99%\n                        top: '100%',\n                        transitionProperty: 'left',\n                        transitionDuration: '800ms', // 通过使用动画的方式来使得状态条更加流畅\n                        transformStyle: 'linear',\n                        display: 'none'\n                    }}\n                    ref={pointerRef}\n                /> */}\n\n            </div>\n        </>\n    )\n}\nexport default VideoPlayer\n","import React from 'react'\nimport { Button, notification } from 'antd'\nimport { useGlobalState } from '../../globalState'\nfunction DetectButton() {\n    const [state, updateState, ] = useGlobalState()\n    // const { setSections } = props\n    const handleDetect = async () => {\n        if (state.remoteVideoSrc === '') {\n            notification['error']({\n                message: '未上传原始视屏文件',\n                description:\n                    '请前往标注界面（左侧第一个）进行原始视屏上传',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            return;\n        }\n\n        const result = await fetch('/detect/' + state.remoteVideoSrc)\n\n        // const result = await fetch('/detect/11-15封岩过伸向上坐起向下.mp4')\n        try {\n            const detailInfo = await result.json()\n            console.log(detailInfo.sections)\n            updateState('sections', [...detailInfo.sections])\n        } catch (error) {\n            notification['error']({\n                message: '出错了',\n                description:\n                    '请联系系统管理员！',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '10px' }}>\n            <Button size='large' type='primary' danger onClick={handleDetect}>进行检测</Button>\n        </div>\n    )\n}\n\nexport default DetectButton\n","import React from 'react'\nimport { Progress } from 'antd'\nimport baseUrl from '../../utils/baseURL'\nimport SpecialPlayer from './SpecialPlayer'\n// import DetectTable from './DetectTable'\nimport DetectButton from './DetectButton'\nimport { useGlobalState } from '../../globalState'\n\nfunction Location() {\n    const [state,] = useGlobalState()\n    // const remoteVideoSrc = 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'\n    // const section = [{ start: 1.9, end: 10 }, { start: 23.1, end: 30.5 }]\n    // const [sections, setSections] = React.useState([])\n    //     {\n    //         key: '1',\n    //         start: '0:30',\n    //         end: '0:31',\n    //         operation: '跳转'\n    //     },\n\n    return (\n        <div>\n\n            {\n                state.remoteVideoStreamRGBSrc === '' ?\n                    <div style={{ textAlign: 'center', color: 'red', fontSize: '40px', fontWeight: 'bold' }}>\n                        <p>{state.remoteVideoStreamSrc === '' ? '请按顺序使用本系统!' : '视频加载中，请耐心等待。'}</p>\n                        <Progress\n                            type=\"line\"\n                            strokeColor={{\n                                '0%': '#108ee9',\n                                '100%': '#87d068',\n                            }}\n                            percent={100}\n                            showInfo={false}\n                            status=\"active\"\n                        />\n                    </div>\n                    :\n                    <>\n                        <SpecialPlayer remoteVideoSrc={[baseUrl + '/' + state.remoteVideoCenterSrc, baseUrl + '/' + state.remoteVideoStreamRGBSrc]} />\n                        <DetectButton />\n                    </>\n            }\n        </div>\n    )\n}\n\nexport default Location\n","export default __webpack_public_path__ + \"static/media/intro.1fb462e0.png\";","import React from 'react'\nimport introductionImage from '../../assets/intro.png'\nfunction index() {\n    return (\n        <div>\n            <img src={introductionImage} style={{maxWidth:'100%'}}  alt='系统功能介绍图'/>\n        </div>\n    )\n}\n\nexport default index\n","import React from 'react';\nimport './App.css';\nimport { Layout, Menu, BackTop } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  VideoCameraOutlined,\n  DeleteOutlined,\n  HighlightOutlined,\n  ClearOutlined,\n  EyeOutlined,\n  AppstoreOutlined,\n  ScissorOutlined,\n  HomeOutlined,\n} from '@ant-design/icons'; //这里先随便用了一些图标，后面再调整\n\nimport { GlobalStateProvider } from \"./globalState\";\n\nimport { BrowserRouter, Switch, Link, Route, Redirect } from 'react-router-dom' // 导入路由组件\n\nimport Introduction from './components/Introduction';\n\nimport Label from './subPages/Label'\nimport Overview from './subPages/Overview'\nimport RemoveUselessFrame from './subPages/RemoveUselessFrame'\nimport Cut from './subPages/Cut'\nimport LightStream from './subPages/LightStream'\nimport Location from './subPages/Location'\nimport Home from './subPages/Home'\n\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu\nfunction App() {\n  const [collapsed, setCollapsed] = React.useState(false) // 这个state用于控制左侧导航栏的开关状态\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n  return (\n    <GlobalStateProvider>\n      <Layout>\n        <BrowserRouter>\n          <Sider theme=\"light\" trigger={null} className=\"site-sider\" collapsible collapsed={collapsed}>\n            <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={['1']} style={{ fontSize: '20px', fontWeight: 'bold' }}>\n              <Menu.Item key=\"1\" icon={<HomeOutlined />}>\n                <Link to=\"/\">首页</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<HighlightOutlined />}>\n                <Link to=\"/label\">标注</Link>\n              </Menu.Item>\n\n              <SubMenu key=\"sub1\" icon={<ClearOutlined />} title=\"预处理\">\n                <Menu.Item key=\"3\" icon={<DeleteOutlined />}>\n                  <Link to=\"/removeuselessframe\">去除无用帧</Link>\n                </Menu.Item>\n                <Menu.Item key=\"4\" icon={<ScissorOutlined />}>\n                  <Link to=\"/cut\">对标剪裁</Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\" icon={<VideoCameraOutlined />}>\n                  <Link to=\"/lightstream\">光流视频</Link>\n                </Menu.Item>\n              </SubMenu>\n\n\n              <Menu.Item key=\"6\" icon={<AppstoreOutlined />}>\n                <Link to=\"/overview\">结果总览</Link>\n              </Menu.Item>\n\n              <Menu.Item key=\"7\" icon={<EyeOutlined />}>\n                <Link to=\"/location\">眼震定位视频</Link>\n              </Menu.Item>\n\n            </Menu>\n          </Sider>\n\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\">\n              {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: toggle,\n              })}\n            </Header>\n\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 280,\n              }}\n            >\n              <Switch>\n                <Route path=\"/removeuselessframe\">\n                  <RemoveUselessFrame />\n                </Route>\n\n                <Route path=\"/cut\">\n                  <Cut />\n                </Route>\n\n                <Route path=\"/lightstream\">\n                  <LightStream />\n                </Route>\n\n                <Route path=\"/overview\">\n                  <Overview />\n                </Route>\n\n                <Route path=\"/location\">\n                  <Location />\n                </Route>\n\n                <Route path=\"/label\">\n                  <Label />\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n                <Redirect to=\"/\"></Redirect>\n              </Switch>\n            </Content>\n          </Layout>\n        </BrowserRouter>\n\n      </Layout>\n\n      <BackTop />\n      <Introduction />\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';  // 这里导入的antd的所有样式\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}